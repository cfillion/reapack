---
version: "{build}-{branch}"

before_build:
  - curl -fsSL https://github.com/reaper-oss/sws/raw/master/reaper/reaper_plugin.h -o vendor/reaper_plugin.h
  - curl -fsSL https://gist.github.com/cfillion/da355e8278048de08ae065d6fe6031c1/raw/reaper_plugin_functions.h -o vendor/reaper_plugin_functions.h
  - git clone -q --depth 1 https://github.com/justinfrankel/WDL.git vendor/WDL

for:
  - matrix: { only: [ APPVEYOR_BUILD_WORKER_IMAGE: &linux Ubuntu1804 ] }
    install:
      - if [[ "$ARCH" == "i686" ]]; then
          export CFLAGS=-m32 CXXFLAGS=-m32;
        fi

      - docker run --name arch --rm -tid -v `pwd`:/src -w /src
        -e CFLAGS -e CXXFLAGS -e CLICOLOR_FORCE=1 archlinux/base
      - export RUN="docker exec arch setarch $ARCH"

      - $RUN
        pacman -Syu --noconfirm base-devel boost catch2 cmake gcc git php wget

      - |-
        if [[ "$ARCH" == "i686" ]]; then
          $RUN sh -c $'
            echo "[multilib]\nInclude = /etc/pacman.d/mirrorlist" >> /etc/pacman.conf' &&
          $RUN \
            pacman -Sy --noconfirm lib32-libcurl lib32-gcc-libs lib32-sqlite
        fi
    build_script:
      - $RUN cmake -B build -DCMAKE_BUILD_TYPE=Release
      - $RUN cmake --build build
    test_script:
      - $RUN cmake --build build --target test
    artifacts:
      - path: build/reaper_reapack*.so

  - matrix: { only: [ APPVEYOR_BUILD_WORKER_IMAGE: &windows Visual Studio 2019 ] }
    cache:
      - C:\Tools\vcpkg\installed -> vendor\vcpkg-deps.txt
    install:
      - set VCPKG_ROOT=C:\Tools\vcpkg
      - set VCPKG_DEFAULT_TRIPLET=%ARCH%-windows-static
      - set /p reapack-deps=<vendor\vcpkg-deps.txt
      - vcpkg install %reapack-deps%

      - if "%ARCH%" == "x64" call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
      - if "%ARCH%" == "x86" call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
    build_script:
      - cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - cmake --build build
    test_script:
      - cmake --build build --target test
    artifacts:
      - path: build\reaper_reapack*.dll
      - path: build\reaper_reapack*.pdb

environment:
  matrix:
    - { APPVEYOR_BUILD_WORKER_IMAGE: *windows, ARCH: x64     }
    - { APPVEYOR_BUILD_WORKER_IMAGE: *windows, ARCH: x86     }
    - { APPVEYOR_BUILD_WORKER_IMAGE: *linux,   ARCH: x86_64  }
    - { APPVEYOR_BUILD_WORKER_IMAGE: *linux,   ARCH: i686    }

deploy:
  provider: GitHub
  draft: true
  description: ''
  force_update: true
  auth_token:
    secure: S4kQ8Fky507O9XHtcXdQ/Gv1+EB/6iiJQwd/InbZsl5pUdCX0oPWuP9N1B8t5fbl
  artifact: /.*\.(dll|so)/
  on:
    APPVEYOR_REPO_TAG: true
