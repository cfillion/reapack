---
version: "{build}-{branch}"

before_build:
  - git submodule update --init

test_script:
  - cmake --build build --target test

for:
  - matrix: { only: [ APPVEYOR_BUILD_WORKER_IMAGE: &linux Ubuntu1804 ] }
    install:
      - sudo sed -i '/arch=/! s/^deb/deb [arch=amd64,i386]/' /etc/apt/sources.list
      - |-
        awk '
        $3 !~ /ubuntu\.com/ { next }
        $1 == "deb" {
          $2 = "[arch=armhf,arm64]";
          $3 = "http://ports.ubuntu.com/ubuntu-ports/"
        } 1' /etc/apt/sources.list | sudo dd of=/etc/apt/sources.list.d/ports.list

      - |-
        install-libs() {
          local arch="$1"; shift
          local packages=(
            libboost-dev libcurl4-openssl-dev libsqlite3-dev libssl-dev libxml2-dev zlib1g-dev
          )

          sudo dpkg --add-architecture $arch && sudo apt-get update -qq &&
          sudo apt install -y --no-install-recommends "$@" ${packages[@]/%/:$arch} > /dev/null
        }

      - |-
        case $ARCH in
        x86_64)
          install-libs amd64
          ;;
        i686)
          install-libs i386 g++-multilib &&
          export TOOLCHAIN=cmake/linux-cross.cmake \
                 TOOLCHAIN_PREFIX=i386-linux-gnu
          ;;
        armv7l)
          install-libs armhf g++-arm-linux-gnueabihf &&
          export TOOLCHAIN=cmake/linux-cross.cmake \
                 TOOLCHAIN_PREFIX=arm-linux-gnueabihf
          ;;
        aarch64)
          install-libs arm64 g++-aarch64-linux-gnu &&
          export TOOLCHAIN=cmake/linux-cross.cmake \
                 TOOLCHAIN_PREFIX=aarch64-linux-gnu
          ;;
        esac

      - wget -q https://mirrors.kernel.org/ubuntu/pool/universe/c/catch2/catch2_2.12.1-1_all.deb
      - sudo apt install -y --no-install-recommends ./catch2*.deb php qemu-user-binfmt > /dev/null
    build_script:
      - cmake -B build
        -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=$TOOLCHAIN
      - cmake --build build
    artifacts:
      - path: build/reaper_reapack*.so

  - matrix: { only: [ APPVEYOR_BUILD_WORKER_IMAGE: &windows Visual Studio 2019 ] }
    cache:
      - C:\Tools\vcpkg\installed -> vendor\vcpkg-deps.txt
    install:
      - set VCPKG_ROOT=C:\Tools\vcpkg
      - set VCPKG_DEFAULT_TRIPLET=%ARCH%-windows-static
      - set /p reapack-deps=<vendor\vcpkg-deps.txt
      - vcpkg install %reapack-deps%

      - if "%ARCH%" == "x64" call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
      - if "%ARCH%" == "x86" call "%ProgramFiles(x86)%\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"
    build_script:
      - cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo
      - cmake --build build
    artifacts:
      - path: build\reaper_reapack*.dll
      - path: build\reaper_reapack*.pdb

environment:
  matrix:
    - { APPVEYOR_BUILD_WORKER_IMAGE: *windows, ARCH: x64     }
    - { APPVEYOR_BUILD_WORKER_IMAGE: *windows, ARCH: x86     }
    - { APPVEYOR_BUILD_WORKER_IMAGE: *linux,   ARCH: x86_64  }
    - { APPVEYOR_BUILD_WORKER_IMAGE: *linux,   ARCH: i686    }
    - { APPVEYOR_BUILD_WORKER_IMAGE: *linux,   ARCH: armv7l  }
    - { APPVEYOR_BUILD_WORKER_IMAGE: *linux,   ARCH: aarch64 }

deploy:
  provider: GitHub
  draft: true
  description: ''
  force_update: true
  auth_token:
    secure: S4kQ8Fky507O9XHtcXdQ/Gv1+EB/6iiJQwd/InbZsl5pUdCX0oPWuP9N1B8t5fbl
  artifact: /.*\.(dll|so)/
  on:
    APPVEYOR_REPO_TAG: true
