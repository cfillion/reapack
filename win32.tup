# wrapper.bat selects which compiler to execute depending on the architecture
export ProgramData
export ProgramFiles(x86)
WRAP := cmd /C wrapper.bat @(ARCH)

CXX := $(WRAP) cl

REAPACK_FILE := reaper_reapack@(SUFFIX)

VCPKG = vendor/vcpkg/installed/@(VCPKG_TRIPLET)

CXXFLAGS := /nologo /std:c++17 /W3 /WX /wd4996 /EHsc /MT /O2 /Z7 /Zo
CXXFLAGS += /Ivendor /I$(VCPKG)/include /Ivendor/WDL /Ivendor/WDL/WDL
CXXFLAGS += /DNOMINMAX /DWDL_NO_DEFINE_MINMAX /DCURL_STATICLIB /DUNICODE
CXXFLAGS += /DNDEBUG /DREAPACK_FILE#\"$(REAPACK_FILE).dll\"

LD := $(WRAP) link
LDFLAGS := /nologo User32.lib Shell32.lib Gdi32.lib Comdlg32.lib Comctl32.lib Bcrypt.lib
LDFLAGS += $(VCPKG)/lib/libcurl.lib Ws2_32.lib Wldap32.lib Crypt32.lib Advapi32.lib
LDFLAGS += $(VCPKG)/lib/sqlite3.lib $(VCPKG)/lib/zlib.lib
LDFLAGS += $(TUP_VARIANTDIR)/src/resource.res
LDFLAGS += /DEBUG /OPT:REF /PDBALTPATH:%_PDB%

LINKDEPS := src/resource.res

RC := $(WRAP) rc
RCFLAGS += /nologo /fo $(TUP_VARIANTDIR)/src/resource.res

TARGET := bin/$(REAPACK_FILE)
SOFLAGS := /DLL /OUT:$(TUP_VARIANTDIR)/$(TARGET).dll
SOTARGET := $(TARGET).dll $(TARGET).lib $(TARGET).exp $(TARGET).pdb

TSFLAGS := /OUT:$(TUP_VARIANTDIR)/bin/test.exe
TSTARGET := bin/test.exe bin/test.lib bin/test.exp bin/test.pdb

!build = |> $(CXX) $(CXXFLAGS) /c %f /Fo%o |>
!link = |> $(LD) $(LDFLAGS) %f |>

: src/resource.rc |> $(RC) $(RCFLAGS) %f |> src/resource.res
